name: Testing Pipeline

on:
  push:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
  #   branches: [ "main","master" ]
  # pull_request:
  #   branches: [ "main", "" ]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  Run_Selenium_Test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'adopt'
    # - uses: browser-actions/setup-chrome@latest
    # - run: chrome --version
     
    - name: Run Selenium tests
      run: |
        cd Amazon_Test
        mvn clean test  
        
  jmeter_tests:
    runs-on: ubuntu-latest

    steps:
    # - name: Create reports directory
      # run: |
      #   cd jmeter
      #   mkdir reports
    
    - name: JMeter Test
      uses: QAInsights/PerfAction@v5.6.2
      with:
        test-plan-path: jmeter/jmeterTest.jmx
        # args: "-e -o ./jmeter/reports/html/"
        
    - name: Upload Results
      uses: actions/upload-artifact@v4
      with:
        name: jmeter-results
        path: jmeter/result.jtl
        if-no-files-found: error
    
    # - name: Upload HTML Reports
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: jmeter-html-reports
    #     path: jmeter/reports
    #     if-no-files-found: error
        
  rest_assured_tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
      
    - name: Test Execution
      run: |
        cd rest-assured
        mvn clean test
        
    - name: Test Report Generation
      uses: actions/upload-artifact@v4
      if: success() || failure()
      with:
          name: TestNG Report                 # Name of the folder
          path: rest-assured/target/surefire-reports/   
    # steps:
    # - name: Checkout code
    #   uses: actions/checkout@v2

    # - name: Set up JDK
    #   uses: actions/setup-java@v2
    #   with:
    #     java-version: '11' # Set the Java version you need
    #     distribution: 'adopt'

    # - name: Build with Maven
    #   run: |
    #     cd rest-assured
    #     mvn clean install -B
    
    # - name: Run Rest Assured tests
    #   run: |
    #     cd rest-assured
    #     mvn clean test
    # - name: Archive test reports
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: rest-assured-test-reports
    #     path: target/surefire-reports
    


  postman_tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '21'

    - name: Install Postman
      run: |
        npm install -g newman
        npm install -g newman-reporter-slackreporter
        npm install -g newman-reporter-htmlextra

    - name: Run Postman tests and Generate Report
      run: |
          cd postman
          newman run "Go Rest.postman_collection.json" -e test.postman_environment.json -r cli,htmlextra --reporter-htmlextra-export testArtifacts/postmanreport.html

    # Upload test reports as artifacts
    - name: Archive test reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: postman-test-reports
        path: postman/testArtifacts




  Run_Nightwatch_tests:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        # os: [ubuntu-latest,windows-latest,macos-latest]
        
        
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Nightwatch Test Started!
        
      - name: Checkout code
        uses: actions/checkout@v4
 
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 21
      - name: npm-install
        run: |
           cd nightwatch-test
           npm ci
      - name: Run Nightwatch tests
        run:  |
           cd nightwatch-test
           npx nightwatch --headless
      - name: Archive test reports
        if: always() 
        uses: actions/upload-artifact@v4
        with:
          name: nightwatch-report-${{ matrix.os }}
          path: nightwatch-test/tests_output

# Running Test using xvfb
   # Run_Nightwatch_Tests:
   #  # The type of runner that the job will run on
   #  runs-on: ${{ matrix.os }}
   #  strategy:
   #    matrix:
   #      os: [ubuntu-latest]
        
   #  # Steps represent a sequence of tasks that will be executed as part of the job
   #  steps:
   #  # Runs a single command using the runners shell
   #    - name: Run a one-line script
   #      run: echo Nightwatch Test Started!
        
   #    - name: Checkout code
   #      uses: actions/checkout@v4
        
   #    - name: Checkout Repository
   #      uses: actions/checkout@v4
   #      with:
   #       #node-version: $undefined
   #       cache: 'npm'
 
   #    - name: Use Node.js
   #      uses: actions/setup-node@v4
   #      with:
   #        node-version: 21
   #    - name: npm-install
   #      run: |
   #         cd nightwatch-test
   #         npm ci
   #    - name: xvfb-install   
   #      run:  |
   #         cd nightwatch-test
   #         sudo apt-get install xvfb
   #    - name: Run Nightwatch tests
   #      run:  |
   #         cd nightwatch-test
   #         xvfb-run --auto-servernum npm test -- --env chrome
